name: Build and Release

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Release ${{ github.ref_name }}'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
          includeDebug: false
          includeRelease: true

      - name: Extract and package CLI tools
        shell: bash
        run: |
          mkdir -p cli-package

          # 确定目标目录和文件扩展名
          if [[ "${{ matrix.platform }}" == "windows-latest" ]]; then
            TARGET_DIR="target/release"
            EXT=".exe"
            ARCHIVE_NAME="cunzhi-cli-${{ github.ref_name }}-windows.zip"
          elif [[ "${{ matrix.platform }}" == "macos-latest" ]]; then
            if [[ "${{ matrix.args }}" == *"aarch64"* ]]; then
              TARGET_DIR="target/aarch64-apple-darwin/release"
              ARCHIVE_NAME="cunzhi-cli-${{ github.ref_name }}-macos-aarch64.tar.gz"
            else
              TARGET_DIR="target/x86_64-apple-darwin/release"
              ARCHIVE_NAME="cunzhi-cli-${{ github.ref_name }}-macos-x86_64.tar.gz"
            fi
            EXT=""
          else
            TARGET_DIR="target/release"
            EXT=""
            ARCHIVE_NAME="cunzhi-cli-${{ github.ref_name }}-linux.tar.gz"
          fi

          # 复制CLI工具
          cp "${TARGET_DIR}/等一下${EXT}" cli-package/
          cp "${TARGET_DIR}/寸止${EXT}" cli-package/

          # 创建压缩包
          cd cli-package
          if [[ "${{ matrix.platform }}" == "windows-latest" ]]; then
            7z a "../${ARCHIVE_NAME}" *
          else
            tar -czf "../${ARCHIVE_NAME}" *
          fi

      - name: Upload CLI tools to release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: cunzhi-cli-*.tar.gz cunzhi-cli-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
